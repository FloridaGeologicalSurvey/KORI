% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/getfalmouth.r
\name{getfalmouth}
\alias{getfalmouth}
\title{Get Falmouth data from the database}
\usage{
getfalmouth(database_connection, start_timestamp, end_timestamp,
  dataset = "rfalmouth")
}
\arguments{
\item{database_connection}{An RPostgreSQL connection object}

\item{start_timestamp}{(str) A starting timestamp in the form 'YYYY-MM-DD 00:00:00'}

\item{end_timestamp}{(str) A starting timestamp in the form 'YYYY-MM-DD 00:00:00'}

\item{dataset}{(str) A valid view from the database. Valid views are "rfalmouth", "rfalmouth_hourly", and "rfalmouth_daily"}
}
\value{
A dataframe for the period [start_timestamp, end_timestamp)
}
\description{
\code{getfalmouth} Query the DB and return data for the period [start_timestamp, end_timestamp)
}
\details{
This is a function to trivialize retrieval of the Falmouth data from the rfalmouth view.
In order for this function to work, database_connection must be a valid RPostgreSQL connection object
And the database view rfalmouth must be present. Note that the command 'Sys.setenv(TZ='GMT')' should
always be run before querying the database.
}
\examples{
library(RPostgreSQL)
library(ggplot2)

#plot full resolution data using qplot
db <- dbConnect(PostgreSQL(), host="localhost", user="wkp_user", password="wkp_user", dbname="wkp_hrdb")
f <- getfalmouth(db, "2012-11-01 00:00:00", "2012-12-01 00:00:00")
qplot(data=f, x=date_time, y=val, colour=site_name) +
     facet_wrap(site_name~var, scales="free_y", nrow=length(levels(f$site_name)), ncol=length(levels(f$var)))

#plot hourly data using ggplot
fal.hourly <- getfalmouth(db, "2012-11-01 00:00:00", "2012-12-01 00:00:00", dataset="rfalmouth_hourly")
p.hourly <- ggplot(fal.hourly, aes(x=date_time, y=val, colour=as.factor(site_name)))
p.hourly + geom_point(size=0.25, alpha=1/3) + facet_grid(var~., scales="free_y")
}
\seealso{
Other res: \code{\link{matplotfalmouth}};
  \code{\link{transmutefalmouth}}
}

